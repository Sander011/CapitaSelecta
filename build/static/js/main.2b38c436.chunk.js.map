{"version":3,"sources":["components/Adult.js","components/Updater.js","App.js","serviceWorker.js","index.js"],"names":["defaultPrediction","styles","container","display","flexDirection","flexGrow","justifyContent","alignItems","loadingContainer","height","leftColumn","width","margin","rightColumn","input","inputText","inputChanger","sliderText","marginLeft","options","text","textAlign","withStyles","classes","features","valuesPerFeature","boundsPerFeature","setError","setSamples","useState","featureValues","setFeatureValues","predicting","setPredicting","undefined","explanation","setExplanation","userGuess","setUserGuess","prediction","setPrediction","done","setDone","rules","setRules","showAllRules","setShowAllRules","showExplanation","setShowExplanation","generating","setGenerating","reset","handleChange","f","v","renderValueChangers","Select","value","onChange","e","target","style","map","MenuItem","key","min","parseInt","max","Slider","marks","label","step","valueLabelDisplay","_","Typography","length","CircularProgress","size","color","Fragment","Button","onClick","sampleFeatures","forEach","Axios","get","params","sample","then","res","data","replace","split","catch","finally","predictSample","className","button","variant","textDecoration","cursor","whiteSpace","slice","join","controls","disabled","generate_nearby","overlay","background","popup","padding","borderRadius","boxShadow","innerDiv","marginBottom","popupText","fontSize","popupLabel","description","restart","samples","currentSample","setCurrentSample","updating","setUpdating","updateModel","val","i","Math","round","useStyles","makeStyles","theme","root","menuButton","marginRight","spacing","title","App","error","setFeatures","setValuesPerFeature","setBoundsPerFeature","useEffect","details","values_per_category","bounds_per_feature","AppBar","position","Toolbar","Snackbar","open","autoHideDuration","onClose","Alert","severity","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2b38c436.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport Axios from 'axios';\r\nimport {\r\n\tButton,\r\n\tCircularProgress,\r\n\tMenuItem,\r\n\tSelect,\r\n\tSlider,\r\n\tTypography,\r\n\twithStyles,\r\n} from '@material-ui/core';\r\n\r\nconst defaultPrediction = 'Enter feature values and press explain to start!';\r\n\r\nconst styles = {\r\n\tcontainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'row',\r\n\t\tflexGrow: '1',\r\n\t\tjustifyContent: 'space-evenly',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tloadingContainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center',\r\n\t\theight: '150px',\r\n\t\tjustifyContent: 'space-evenly',\r\n\t},\r\n\tleftColumn: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tjustifyContent: 'flex-start',\r\n\t\talignItems: 'flex-start',\r\n\t\twidth: '50%',\r\n\t\theight: '70vh',\r\n\t\tmargin: '50px',\r\n\t},\r\n\trightColumn: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tjustifyContent: 'flex-start',\r\n\t\talignItems: 'center',\r\n\t\twidth: '50%',\r\n\t\theight: '70vh',\r\n\t\tmargin: '50px',\r\n\t},\r\n\tinput: {\r\n\t\tdisplay: 'flex',\r\n\t\twidth: '100%',\r\n\t\tjustifyContent: 'space-between',\r\n\t\tmargin: '10px',\r\n\t},\r\n\tinputText: {\r\n\t\twidth: '10vw',\r\n\t},\r\n\tinputChanger: {\r\n\t\twidth: '20vw',\r\n\t\tdisplay: 'flex',\r\n\t},\r\n\tsliderText: {\r\n\t\tmarginLeft: '25px',\r\n\t\twidth: '25px',\r\n\t},\r\n\toptions: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center',\r\n\t},\r\n\ttext: {\r\n\t\ttextAlign: 'center',\r\n\t\tmargin: '5px',\r\n\t},\r\n};\r\n\r\nconst Adult = ({ classes, features, valuesPerFeature, boundsPerFeature, setError, setSamples }) => {\r\n\tconst [featureValues, setFeatureValues] = useState({});\r\n\tconst [predicting, setPredicting] = useState(false);\r\n\tconst [explanation, setExplanation] = useState(undefined);\r\n\tconst [userGuess, setUserGuess] = useState('');\r\n\tconst [prediction, setPrediction] = useState(defaultPrediction);\r\n\tconst [done, setDone] = useState(false);\r\n\tconst [rules, setRules] = useState([]);\r\n\tconst [showAllRules, setShowAllRules] = useState(false);\r\n\tconst [showExplanation, setShowExplanation] = useState(false);\r\n\tconst [generating, setGenerating] = useState(false);\r\n\r\n\tconst reset = () => {\r\n\t\tsetPrediction(defaultPrediction);\r\n\t\tsetUserGuess('');\r\n\t\tsetRules([]);\r\n\t\tsetShowAllRules(false);\r\n\t\tsetShowExplanation(false);\r\n\t\tsetExplanation(undefined);\r\n\t\tsetDone(false);\r\n\t};\r\n\r\n\tconst predictSample = () => {\r\n\t\tif (predicting || prediction !== defaultPrediction) return;\r\n\r\n\t\tsetPredicting(true);\r\n\t\treset();\r\n\r\n\t\tconst sampleFeatures = {};\r\n\r\n\t\tfeatures.forEach((f) => {\r\n\t\t\tif (f in valuesPerFeature) sampleFeatures[f] = featureValues[f] || valuesPerFeature[f][0];\r\n\t\t\tif (f in boundsPerFeature) sampleFeatures[f] = featureValues[f] || boundsPerFeature[f][0];\r\n\t\t});\r\n\r\n\t\tAxios.get('/api/datasets/predict_adult/', {\r\n\t\t\tparams: {\r\n\t\t\t\tsample: sampleFeatures,\r\n\t\t\t},\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tlet explanation = res.data.explanation;\r\n\t\t\t\texplanation = explanation.replace('predicted', 'predicted that this adult has an income');\r\n\t\t\t\texplanation = explanation.replace(/<=/gi, '≤');\r\n\t\t\t\texplanation = explanation.replace(/>=/gi, '≥');\r\n\t\t\t\texplanation = explanation.replace(/\\/=/gi, '≠');\r\n\t\t\t\texplanation = explanation.replace(/'/gi, '');\r\n\t\t\t\tconst rules = explanation.split('because')[1].split('and');\r\n\t\t\t\tsetExplanation(`${explanation.split('because')[0]} because ${rules[0]}`);\r\n\t\t\t\tsetRules(rules);\r\n\t\t\t\tsetPrediction(explanation.split(' instead')[0]);\r\n\t\t\t})\r\n\t\t\t.catch(() => {\r\n\t\t\t\tsetError(\r\n\t\t\t\t\t'Something went wrong while predicting the sample. Please try another sample or come back later.',\r\n\t\t\t\t);\r\n\t\t\t})\r\n\t\t\t.finally(() => setPredicting(false));\r\n\t};\r\n\r\n\tconst handleChange = (f, v) => {\r\n\t\treset();\r\n\t\tsetFeatureValues({ ...featureValues, [f]: v });\r\n\t};\r\n\r\n\tconst generate_nearby = () => {\r\n\t\tconst sampleFeatures = {};\r\n\t\tsetGenerating(true);\r\n\t\tfeatures.forEach((f) => {\r\n\t\t\tif (f in valuesPerFeature) sampleFeatures[f] = featureValues[f] || valuesPerFeature[f][0];\r\n\t\t\tif (f in boundsPerFeature) sampleFeatures[f] = featureValues[f] || boundsPerFeature[f][0];\r\n\t\t});\r\n\r\n\t\tAxios.get('/api/datasets/nearby_samples/', {\r\n\t\t\tparams: {\r\n\t\t\t\tsample: sampleFeatures,\r\n\t\t\t},\r\n\t\t})\r\n\t\t\t.then((res) => setSamples(res.data.data))\r\n\t\t\t.catch(() => {\r\n\t\t\t\tsetError('Something went wrong while updating. Please try again or come back later.');\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst renderSampleGenerator = () =>\r\n\t\tfeatures.length > 0 ? (\r\n\t\t\tfeatures.map((f) => (\r\n\t\t\t\t<div key={f} style={styles.input}>\r\n\t\t\t\t\t<Typography style={styles.inputText}>{f}</Typography>\r\n\t\t\t\t\t{renderValueChangers(f)}\r\n\t\t\t\t</div>\r\n\t\t\t))\r\n\t\t) : (\r\n\t\t\t<CircularProgress style={{ margin: 'auto' }} size={40} color={'primary'} />\r\n\t\t);\r\n\r\n\tconst renderValueChangers = (f) => {\r\n\t\tif (f in valuesPerFeature) {\r\n\t\t\treturn (\r\n\t\t\t\t<Select\r\n\t\t\t\t\tvalue={featureValues[f] || valuesPerFeature[f][0]}\r\n\t\t\t\t\tonChange={(e) => handleChange(f, e.target.value)}\r\n\t\t\t\t\tstyle={styles.inputChanger}\r\n\t\t\t\t>\r\n\t\t\t\t\t{valuesPerFeature[f].map((v) => (\r\n\t\t\t\t\t\t<MenuItem key={v} value={v}>\r\n\t\t\t\t\t\t\t{v}\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Select>\r\n\t\t\t);\r\n\t\t} else if (f in boundsPerFeature) {\r\n\t\t\tconst min = parseInt(boundsPerFeature[f][0]);\r\n\t\t\tconst max = parseInt(boundsPerFeature[f][1]);\r\n\t\t\treturn (\r\n\t\t\t\t<div style={styles.inputChanger}>\r\n\t\t\t\t\t<Slider\r\n\t\t\t\t\t\tmin={min}\r\n\t\t\t\t\t\tmax={max}\r\n\t\t\t\t\t\tmarks={[\r\n\t\t\t\t\t\t\t{ value: min, label: min },\r\n\t\t\t\t\t\t\t{ value: max, label: max },\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t\t\tstep={1.0}\r\n\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\t\t\tvalue={featureValues[f] || min}\r\n\t\t\t\t\t\tonChange={(_, v) => handleChange(f, v)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Typography style={styles.sliderText}>{featureValues[f] || min}</Typography>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\tconst renderPrediction = () => (\r\n\t\t<React.Fragment>\r\n\t\t\t<Button\r\n\t\t\t\tonClick={() => predictSample()}\r\n\t\t\t\tclassName={classes.button}\r\n\t\t\t\tvariant=\"contained\"\r\n\t\t\t\tcolor={prediction !== defaultPrediction ? 'primary' : 'secondary'}\r\n\t\t\t>\r\n\t\t\t\t{predicting ? (\r\n\t\t\t\t\t<CircularProgress size={20} color=\"white\" />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Typography>Predict</Typography>\r\n\t\t\t\t)}\r\n\t\t\t</Button>\r\n\t\t\t<Typography style={styles.text}>\r\n\t\t\t\t{predicting ? 'Predicting sample...' : prediction}\r\n\t\t\t</Typography>\r\n\t\t</React.Fragment>\r\n\t);\r\n\r\n\tconst renderWhyButton = () => (\r\n\t\t<Button\r\n\t\t\tclassName={classes.button}\r\n\t\t\tvariant=\"contained\"\r\n\t\t\tonClick={() => setShowExplanation(true)}\r\n\t\t\tcolor={showExplanation ? 'primary' : ''}\r\n\t\t>\r\n\t\t\t<Typography variant=\"p\">Why {prediction.split('income ')[1]}?</Typography>\r\n\t\t</Button>\r\n\t);\r\n\r\n\tconst renderExplanation = () => (\r\n\t\t<React.Fragment>\r\n\t\t\t<Typography style={styles.text}>{explanation}</Typography>\r\n\t\t\t<Typography\r\n\t\t\t\tonClick={() => setShowAllRules(!showAllRules)}\r\n\t\t\t\tstyle={{ ...styles.text, textDecoration: 'underline', cursor: 'pointer' }}\r\n\t\t\t>\r\n\t\t\t\t{rules.length > 1 ? `show ${showAllRules ? 'less' : 'more'} rules` : ''}\r\n\t\t\t</Typography>\r\n\t\t\t<Typography style={{ ...styles.text, whiteSpace: 'pre-wrap' }}>\r\n\t\t\t\t{showAllRules && rules.slice(1).join('\\n')}\r\n\t\t\t</Typography>\r\n\t\t</React.Fragment>\r\n\t);\r\n\r\n\tconst renderChoice = () => (\r\n\t\t<React.Fragment>\r\n\t\t\t<Typography style={styles.text}>What did you think the income of this adult was?</Typography>\r\n\t\t\t<div className={classes.controls}>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tclassName={classes.button}\r\n\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\tcolor={userGuess === '≤50K' ? 'primary' : ''}\r\n\t\t\t\t\tonClick={() => setUserGuess('≤50K')}\r\n\t\t\t\t\tdisabled={userGuess === '>50K'}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Typography>{'≤50K'}</Typography>\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tclassName={classes.button}\r\n\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\tcolor={userGuess === '>50K' ? 'primary' : ''}\r\n\t\t\t\t\tonClick={() => setUserGuess('>50K')}\r\n\t\t\t\t\tdisabled={userGuess === '≤50K'}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Typography>{'>50K'}</Typography>\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t);\r\n\r\n\tconst renderUserGuess = () => (\r\n\t\t<div style={styles.options}>\r\n\t\t\t<Typography style={styles.text}>\r\n\t\t\t\tYou seem to disagree with the model, would you like to walk through some related samples in\r\n\t\t\t\torder to improve the model?\r\n\t\t\t</Typography>\r\n\t\t\t<div className={classes.controls}>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tclassName={classes.button}\r\n\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\tcolor={generating ? 'primary' : ''}\r\n\t\t\t\t\tonClick={() => generate_nearby()}\r\n\t\t\t\t\tdisabled={done}\r\n\t\t\t\t>\r\n\t\t\t\t\t{generating ? <CircularProgress size={20} color=\"white\" /> : <Typography>Yes</Typography>}\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tclassName={classes.button}\r\n\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\tcolor={done ? 'primary' : ''}\r\n\t\t\t\t\tonClick={() => setDone(true)}\r\n\t\t\t\t\tdisabled={generating}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Typography>No</Typography>\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div style={styles.container}>\r\n\t\t\t<div style={styles.leftColumn}>{renderSampleGenerator()}</div>\r\n\t\t\t<div style={styles.rightColumn}>\r\n\t\t\t\t{renderPrediction()}\r\n\t\t\t\t{prediction && prediction !== defaultPrediction && renderWhyButton()}\r\n\t\t\t\t{showExplanation && renderExplanation()}\r\n\t\t\t\t{showExplanation && renderChoice()}\r\n\t\t\t\t{userGuess && userGuess !== prediction.split('income ')[1] && renderUserGuess()}\r\n\t\t\t\t{(done || userGuess === prediction.split('income ')[1]) && (\r\n\t\t\t\t\t<Typography style={styles.text}>Great! Enter new details to try again.</Typography>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default withStyles(styles)(Adult);\r\n","import React, { useState } from 'react';\r\n\r\nimport Axios from 'axios';\r\n\r\nimport { Button, Typography, withStyles } from '@material-ui/core';\r\n\r\nconst styles = {\r\n\toverlay: {\r\n\t\twidth: '100%',\r\n\t\theight: '100%',\r\n\t\tbackground: '#eeeeee',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'center',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tpopup: {\r\n\t\tbackground: 'white',\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tpadding: '1rem',\r\n\t\twidth: '400px',\r\n\t\talignItems: 'center',\r\n\t\tborderRadius: '20px',\r\n\t\tboxShadow: '2px 2px 2px 2px #cccccc',\r\n\t},\r\n\tinnerDiv: {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\twidth: '100%',\r\n\t\tmarginBottom: '5px',\r\n\t},\r\n\tpopupText: {\r\n\t\tmargin: 0,\r\n\t\tfontSize: '1.5rem',\r\n\t},\r\n\tpopupLabel: {\r\n\t\ttextAlign: 'center',\r\n\t\tfontSize: '1.5rem',\r\n\t},\r\n\tdescription: {\r\n\t\ttextAlign: 'center',\r\n\t\tmargin: 0,\r\n\t},\r\n};\r\n\r\nconst Updater = ({ classes, features, restart, samples, setError }) => {\r\n\tconst [currentSample, setCurrentSample] = useState(0);\r\n\tconst [updating, setUpdating] = useState(false);\r\n\r\n\tconst updateModel = (val) => {\r\n\t\tsetUpdating(true);\r\n\t\tconst sampleFeatures = {};\r\n\t\tfeatures.forEach((f, i) => {\r\n\t\t\tif (i === 0) sampleFeatures[f] = Math.max(17, Math.round(samples[currentSample][i]));\r\n\t\t\telse if (i === 5) sampleFeatures[f] = Math.max(0, Math.round(samples[currentSample][5]));\r\n\t\t\telse sampleFeatures[f] = samples[currentSample][i];\r\n\t\t});\r\n\t\tAxios.get('/api/datasets/update_model/', {\r\n\t\t\tparams: {\r\n\t\t\t\tsample: sampleFeatures,\r\n\t\t\t\tprediction: val,\r\n\t\t\t},\r\n\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\tif (currentSample + 1 === samples.length) restart();\r\n\t\t\t\tsetCurrentSample(currentSample + 1);\r\n\t\t\t})\r\n\t\t\t.catch(() =>\r\n\t\t\t\tsetError('Something went wrong while updating. Please try again or come back later.'),\r\n\t\t\t)\r\n\t\t\t.finally(() => setUpdating(false));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div style={styles.overlay}>\r\n\t\t\t<div style={styles.popup}>\r\n\t\t\t\t<h1>Model updater</h1>\r\n\t\t\t\t<p style={styles.description}>\r\n\t\t\t\t\tIn order to properly update the model we will show you some samples closely related to the\r\n\t\t\t\t\tpreviously classified sample. Please indicate as what this sample should be classified so\r\n\t\t\t\t\twe can update the model accordingly.\r\n\t\t\t\t</p>\r\n\t\t\t\t<h2>\r\n\t\t\t\t\tSample {currentSample + 1} / {samples.length}\r\n\t\t\t\t</h2>\r\n\t\t\t\t<div style={styles.innerDiv}>\r\n\t\t\t\t\t<label style={styles.popupLabel}>Age</label>\r\n\t\t\t\t\t<p style={styles.popupText}>{Math.max(17, Math.round(samples[currentSample][0]))}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={styles.innerDiv}>\r\n\t\t\t\t\t<label style={styles.popupLabel}>Occupation</label>\r\n\t\t\t\t\t<p style={styles.popupText}>{samples[currentSample][1]}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={styles.innerDiv}>\r\n\t\t\t\t\t<label style={styles.popupLabel}>Relationship</label>\r\n\t\t\t\t\t<p style={styles.popupText}>{samples[currentSample][2]}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={styles.innerDiv}>\r\n\t\t\t\t\t<label style={styles.popupLabel}>Race</label>\r\n\t\t\t\t\t<p style={styles.popupText}>{samples[currentSample][3]}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={styles.innerDiv}>\r\n\t\t\t\t\t<label style={styles.popupLabel}>Sex</label>\r\n\t\t\t\t\t<p style={styles.popupText}>{samples[currentSample][4]}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={styles.innerDiv}>\r\n\t\t\t\t\t<label style={styles.popupLabel}>Hours per week</label>\r\n\t\t\t\t\t<p style={styles.popupText}>{Math.max(0, Math.round(samples[currentSample][5]))}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={styles.innerDiv}>\r\n\t\t\t\t\t<label style={styles.popupLabel}>Native country</label>\r\n\t\t\t\t\t<p style={styles.popupText}>{samples[currentSample][6]}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classes.controls}>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tclassName={classes.button}\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\tonClick={() => updateModel('≤50K')}\r\n\t\t\t\t\t\tdisabled={updating}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Typography>{'≤50K'}</Typography>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tclassName={classes.button}\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\tonClick={() => updateModel('>50K')}\r\n\t\t\t\t\t\tdisabled={updating}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Typography>{'>50K'}</Typography>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default withStyles(styles)(Updater);\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport Axios from 'axios';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AppBar, Button, Snackbar, Toolbar, Typography } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport Adult from './components/Adult';\r\nimport Updater from './components/Updater';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tflexGrow: 1,\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\theight: '100vh',\r\n\t},\r\n\tmenuButton: {\r\n\t\tmarginRight: theme.spacing(2),\r\n\t},\r\n\ttitle: {\r\n\t\tflexGrow: 1,\r\n\t},\r\n\tbutton: {\r\n\t\twidth: '10rem',\r\n\t\theight: '3rem',\r\n\t\tpadding: '1rem',\r\n\t\tborderRadius: '1rem',\r\n\t\tmargin: '1rem',\r\n\t},\r\n\tcontrols: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'row',\r\n\t\twidth: '30vw',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'space-evenly',\r\n\t},\r\n}));\r\n\r\nconst App = () => {\r\n\tconst classes = useStyles();\r\n\tconst [error, setError] = useState(undefined);\r\n\tconst [samples, setSamples] = useState([]);\r\n\tconst [features, setFeatures] = useState([]);\r\n\tconst [valuesPerFeature, setValuesPerFeature] = useState({});\r\n\tconst [boundsPerFeature, setBoundsPerFeature] = useState({});\r\n\r\n\tuseEffect(() => {\r\n\t\tAxios.get('/api/datasets/retrieve_adult/')\r\n\t\t\t.then((details) => {\r\n\t\t\t\tsetFeatures(details.data.features);\r\n\t\t\t\tsetValuesPerFeature(details.data.values_per_category);\r\n\t\t\t\tsetBoundsPerFeature(details.data.bounds_per_feature);\r\n\t\t\t})\r\n\t\t\t.catch((_) =>\r\n\t\t\t\tsetError(\r\n\t\t\t\t\t'Something went wrong while fetching the dataset. Please try another dataset or come back later.',\r\n\t\t\t\t),\r\n\t\t\t);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<AppBar position=\"static\">\r\n\t\t\t\t<Toolbar>\r\n\t\t\t\t\t<Typography variant=\"h6\" className={classes.title}>\r\n\t\t\t\t\t\tConstrastive explanations\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t{samples.length > 0 && (\r\n\t\t\t\t\t\t<Button onClick={() => setSamples([])} color=\"inherit\">\r\n\t\t\t\t\t\t\tGo back\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\t\t\t{samples.length > 0 ? (\r\n\t\t\t\t<Updater\r\n\t\t\t\t\trestart={() => setSamples([])}\r\n\t\t\t\t\tfeatures={features}\r\n\t\t\t\t\tclasses={classes}\r\n\t\t\t\t\tsetError={setError}\r\n\t\t\t\t\tsamples={samples}\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\t<Adult\r\n\t\t\t\t\tfeatures={features}\r\n\t\t\t\t\tvaluesPerFeature={valuesPerFeature}\r\n\t\t\t\t\tboundsPerFeature={boundsPerFeature}\r\n\t\t\t\t\tclasses={classes}\r\n\t\t\t\t\tsetError={setError}\r\n\t\t\t\t\tsetSamples={setSamples}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t\t<Snackbar\r\n\t\t\t\topen={error !== undefined}\r\n\t\t\t\tautoHideDuration={6000}\r\n\t\t\t\tonClose={() => setError(undefined)}\r\n\t\t\t>\r\n\t\t\t\t<Alert onClose={() => setError(undefined)} severity=\"error\">\r\n\t\t\t\t\t{error}\r\n\t\t\t\t</Alert>\r\n\t\t\t</Snackbar>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}