{"version":3,"sources":["components/DatasetDetails.js","components/Spam.js","components/Adult.js","App.js","serviceWorker.js","index.js"],"names":["styles","predictButton","width","height","padding","borderRadius","container","display","flexDirection","flexGrow","justifyContent","alignItems","controls","loadingContainer","getColumns","keys","categoricalValues","map","key","title","field","lookup","Object","includes","reduce","res","x","undefined","filterCellStyle","paddingTop","filter","val","getDatasetSamples","id","Axios","get","withStyles","classes","datasetId","useState","dataset","setDataset","error","setError","predicting","setPredicting","prediction","setPrediction","allSamples","setSamples","filteredSamples","setFilteredSamples","setCategoricalValues","selected","setSelected","currentValue","setCurrentValue","useEffect","all","then","spread","details","samples","data","categorical_values","catch","_","style","length","Fragment","options","pageSize","pageSizeOptions","maxBodyHeight","filtering","rowStyle","rowData","backgroundColor","tableData","color","columns","onRowClick","selectedRow","Button","className","variant","onClick","model_predictions","label","Typography","params","sampleId","indexOf","foilClass","err","disabled","CircularProgress","size","FormControl","InputLabel","Select","value","onChange","event","target","MenuItem","align","Snackbar","open","autoHideDuration","onClose","Alert","severity","defaultExplanation","button","margin","rightColumn","options1","text","textAlign","word_counters","char_counters","chars_to_chars","$","countValues","email","toMatch","word_freqs","f","match","RegExp","char_freqs","c","capital_run_lengths","a","capital_run_lengths_longest","Math","max","capital_run_lengths_total","b","preprocess","capital_run_length_longest","capital_run_length_total","capital_run_length_average","words","w","i","word","values","chars","char","setValue","explanation","setExplanation","userGuess","setUserGuess","modelUpdated","setModelUpdated","done","setDone","TextareaAutosize","aria-label","rowsMax","rowsMin","placeholder","resize","overflowY","maxHeight","sample","replace","leftColumn","input","inputText","inputChanger","sliderText","marginLeft","features","setFeatures","valuesPerFeature","setValuesPerFeature","boundsPerFeature","setBoundsPerFeature","featureValues","setFeatureValues","values_per_category","bounds_per_feature","handleChange","v","e","min","parseInt","Slider","marks","step","valueLabelDisplay","renderValueChangers","sampleFeatures","forEach","predictSample","updateModel","useStyles","makeStyles","theme","root","menuButton","marginRight","spacing","App","setDatasetId","AppBar","position","Toolbar","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5a19c33f.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport {\n\tCircularProgress,\n\tSelect,\n\tSnackbar,\n\tTypography,\n\twithStyles,\n\tMenuItem,\n\tFormControl,\n\tInputLabel,\n} from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport MaterialTable from 'material-table';\n\nconst styles = {\n\tpredictButton: {\n\t\twidth: '15rem',\n\t\theight: '5rem',\n\t\tpadding: '1rem',\n\t\tborderRadius: '1rem',\n\t},\n\tcontainer: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\tflexGrow: '1',\n\t\tjustifyContent: 'space-evenly',\n\t\talignItems: 'center',\n\t\tpadding: '1rem',\n\t},\n\tcontrols: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'row',\n\t\twidth: '100%',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'space-evenly',\n\t},\n\tloadingContainer: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center',\n\t\theight: '150px',\n\t\tjustifyContent: 'space-evenly',\n\t},\n};\n\nconst getColumns = (keys, categoricalValues) =>\n\tkeys\n\t\t.map(key =>\n\t\t\tkey !== 'tableData'\n\t\t\t\t? {\n\t\t\t\t\t\ttitle: key,\n\t\t\t\t\t\tfield: key,\n\t\t\t\t\t\tlookup: Object.keys(categoricalValues).includes(key)\n\t\t\t\t\t\t\t? categoricalValues[key].reduce((res, x) => {\n\t\t\t\t\t\t\t\t\tres[x] = x;\n\t\t\t\t\t\t\t\t\treturn res;\n\t\t\t\t\t\t\t  }, {})\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\tfilterCellStyle: Object.keys(categoricalValues).includes(key)\n\t\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t\t: { paddingTop: '32px' },\n\t\t\t\t  }\n\t\t\t\t: undefined,\n\t\t)\n\t\t.filter(val => val !== undefined);\n\nconst getDatasetDetails = id => Axios.get(`/api/datasets/${id}`);\nconst getDatasetSamples = id => Axios.get(`/api/datasets/${id}/retrieve_samples/`);\n\nconst DatasetDetails = ({ classes, datasetId }) => {\n\tconst [dataset, setDataset] = useState(undefined);\n\tconst [error, setError] = useState(undefined);\n\tconst [predicting, setPredicting] = useState(false);\n\tconst [prediction, setPrediction] = useState(undefined);\n\tconst [allSamples, setSamples] = useState([]);\n\tconst [filteredSamples, setFilteredSamples] = useState([]);\n\tconst [categoricalValues, setCategoricalValues] = useState({});\n\tconst [selected, setSelected] = useState(undefined);\n\tconst [currentValue, setCurrentValue] = useState(undefined);\n\n\tuseEffect(() => {\n\t\tAxios.all([getDatasetDetails(datasetId), getDatasetSamples(datasetId)])\n\t\t\t.then(\n\t\t\t\tAxios.spread((details, samples) => {\n\t\t\t\t\tsetDataset(details.data);\n\t\t\t\t\tsetSamples(samples.data.samples);\n\t\t\t\t\tsetFilteredSamples([...samples.data.samples]);\n\t\t\t\t\tsetCategoricalValues(samples.data.categorical_values);\n\t\t\t\t}),\n\t\t\t)\n\t\t\t.catch(_ =>\n\t\t\t\tsetError(\n\t\t\t\t\t'Something went wrong while fetching the dataset. Please try another dataset or come back later.',\n\t\t\t\t),\n\t\t\t);\n\n\t\treturn () => {\n\t\t\tsetPrediction('');\n\t\t\tsetSamples([]);\n\t\t\tsetFilteredSamples([]);\n\t\t\tsetError(undefined);\n\t\t\tsetDataset(undefined);\n\t\t\tsetCurrentValue(undefined);\n\t\t\tsetSelected(undefined);\n\t\t};\n\t}, [datasetId]);\n\n\tconst selectRow = row => {\n\t\tsetSelected(row);\n\t\tsetCurrentValue(undefined);\n\t};\n\n\tconst filterSamples = () => {\n\t\tfilteredSamples.length === allSamples.length\n\t\t\t? setFilteredSamples(allSamples.filter(x => x.model_predictions !== x.label))\n\t\t\t: setFilteredSamples([...allSamples]);\n\t};\n\n\tconst predictSample = () => {\n\t\tif (predicting) return;\n\t\tsetPredicting(true);\n\t\tAxios.get(`/api/datasets/${datasetId}/predict_sample/`, {\n\t\t\tparams: {\n\t\t\t\tsampleId: allSamples.indexOf(filteredSamples[selected.tableData.id]),\n\t\t\t\tfoilClass: currentValue,\n\t\t\t},\n\t\t})\n\t\t\t.then(res => {\n\t\t\t\tsetPrediction(res.data);\n\t\t\t\tsetPredicting(false);\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tsetError(\n\t\t\t\t\t'Something went wrong while predicting the sample. Please try another sample or come back later.',\n\t\t\t\t);\n\t\t\t\tsetPredicting(false);\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<div style={styles.container}>\n\t\t\t{filteredSamples.length > 0 ? (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<MaterialTable\n\t\t\t\t\t\ttitle={dataset.title}\n\t\t\t\t\t\tdata={filteredSamples}\n\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\tpageSize: 10,\n\t\t\t\t\t\t\tpageSizeOptions: [5, 10, 20, 100],\n\t\t\t\t\t\t\tmaxBodyHeight: '55vh',\n\t\t\t\t\t\t\tfiltering: true,\n\t\t\t\t\t\t\trowStyle: rowData => ({\n\t\t\t\t\t\t\t\tbackgroundColor:\n\t\t\t\t\t\t\t\t\tselected != null && selected.tableData.id === rowData.tableData.id && '#3f51b5',\n\t\t\t\t\t\t\t\tcolor:\n\t\t\t\t\t\t\t\t\tselected != null && selected.tableData.id === rowData.tableData.id && 'white',\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tstyle={{ width: '95vw' }}\n\t\t\t\t\t\tcolumns={getColumns(Object.keys(filteredSamples[0]), categoricalValues)}\n\t\t\t\t\t\tonRowClick={(_, selectedRow) => selectRow(selectedRow)}\n\t\t\t\t\t/>\n\t\t\t\t\t<div style={styles.controls}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName={classes.predictButton}\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tonClick={() => filterSamples()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\tShow{' '}\n\t\t\t\t\t\t\t\t{allSamples.length === filteredSamples.length\n\t\t\t\t\t\t\t\t\t? 'only incorrect model predictions'\n\t\t\t\t\t\t\t\t\t: 'all'}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tonClick={() => predictSample()}\n\t\t\t\t\t\t\tclassName={classes.predictButton}\n\t\t\t\t\t\t\tdisabled={!selected}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{predicting ? (\n\t\t\t\t\t\t\t\t<CircularProgress size={26} color=\"white\" />\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<Typography>Explain sample</Typography>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<FormControl style={{ width: '15rem' }} disabled={!selected}>\n\t\t\t\t\t\t\t<InputLabel>Foil class</InputLabel>\n\t\t\t\t\t\t\t<Select value={currentValue} onChange={event => setCurrentValue(event.target.value)}>\n\t\t\t\t\t\t\t\t{categoricalValues.label &&\n\t\t\t\t\t\t\t\t\tcategoricalValues.label\n\t\t\t\t\t\t\t\t\t\t.filter(label => selected && selected.model_predictions !== label)\n\t\t\t\t\t\t\t\t\t\t.map(label => (\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem key={label} value={label}>\n\t\t\t\t\t\t\t\t\t\t\t\t{label}\n\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Typography align=\"center\" variant=\"h4\">\n\t\t\t\t\t\t{predicting\n\t\t\t\t\t\t\t? 'Explaining...'\n\t\t\t\t\t\t\t: prediction ||\n\t\t\t\t\t\t\t  'Select a sample to explain and (optionally) the class with which it should be compared.'}\n\t\t\t\t\t</Typography>\n\t\t\t\t</React.Fragment>\n\t\t\t) : (\n\t\t\t\t<div style={styles.loadingContainer}>\n\t\t\t\t\t<CircularProgress />\n\t\t\t\t\t<Typography variant=\"h4\">Retrieving and predicting samples...</Typography>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<Snackbar open={error != null} autoHideDuration={6000} onClose={() => setError(undefined)}>\n\t\t\t\t<Alert onClose={() => setError(undefined)} severity=\"error\">\n\t\t\t\t\t{error}\n\t\t\t\t</Alert>\n\t\t\t</Snackbar>\n\t\t</div>\n\t);\n};\nexport default withStyles(styles)(DatasetDetails);\n","import React, { useState } from 'react';\nimport Axios from 'axios';\nimport {\n\tButton,\n\tCircularProgress,\n\tSnackbar,\n\tTextareaAutosize,\n\tTypography,\n\twithStyles,\n} from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\n\nconst defaultExplanation = 'Enter an email and press explain to start!';\n\nconst styles = {\n\tbutton: {\n\t\twidth: '10rem',\n\t\theight: '3rem',\n\t\tpadding: '1rem',\n\t\tborderRadius: '1rem',\n\t\tmargin: '1rem',\n\t},\n\tcontainer: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'row',\n\t\tflexGrow: '1',\n\t\tjustifyContent: 'space-evenly',\n\t\talignItems: 'center',\n\t\tpadding: '1rem',\n\t},\n\tcontrols: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'row',\n\t\twidth: '30vw',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'space-evenly',\n\t},\n\tloadingContainer: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center',\n\t\theight: '150px',\n\t\tjustifyContent: 'space-evenly',\n\t},\n\trightColumn: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\tjustifyContent: 'flex-start',\n\t\talignItems: 'center',\n\t\twidth: '50%',\n\t\theight: '70vh',\n\t\tmargin: '50px',\n\t},\n\toptions1: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center',\n\t},\n\ttext: {\n\t\ttextAlign: 'center',\n\t\tmargin: '5px',\n\t},\n};\n\nconst word_counters = [\n\t'make',\n\t'address',\n\t'all',\n\t'3d',\n\t'our',\n\t'over',\n\t'remove',\n\t'internet',\n\t'order',\n\t'mail',\n\t'receive',\n\t'will',\n\t'people',\n\t'report',\n\t'addresses',\n\t'free',\n\t'business',\n\t'email',\n\t'you',\n\t'credit',\n\t'your',\n\t'font',\n\t'000',\n\t'money',\n\t'hp',\n\t'hpl',\n\t'george',\n\t'650',\n\t'lab',\n\t'labs',\n\t'telnet',\n\t'857',\n\t'data',\n\t'415',\n\t'85',\n\t'technology',\n\t'1999',\n\t'parts',\n\t'pm',\n\t'direct',\n\t'cs',\n\t'meeting',\n\t'original',\n\t'project',\n\t're',\n\t'edu',\n\t'table',\n\t'conference',\n];\n\nconst char_counters = [';', '(', '[', '!', '$', '#'];\nconst chars_to_chars = {\n\t';': '%3B',\n\t'(': '%2B',\n\t'[': '%5B',\n\t'!': '%21',\n\t$: '%24',\n\t'#': '%23',\n};\n\nconst countValues = email => {\n\tconst toMatch = ` ${email} `;\n\tconst word_freqs = word_counters.map(\n\t\tf => (toMatch.match(new RegExp(`(\\\\W+${f}\\\\W+)`, 'gi')) || []).length,\n\t);\n\tconst char_freqs = char_counters.map(\n\t\tc => (toMatch.match(new RegExp(`[${c}]`, 'g')) || []).length,\n\t);\n\tconst capitals = toMatch.match(/([A-Z]+)/g) || [];\n\tconst capital_run_lengths = capitals.map(a => a.length);\n\tconst capital_run_lengths_longest = Math.max(...capital_run_lengths, 0);\n\tconst capital_run_lengths_total = capital_run_lengths.reduce((a, b) => a + b, 0);\n\tconst capital_run_lengths_average = capital_run_lengths_total / capital_run_lengths.length || 0;\n\treturn [\n\t\tword_freqs,\n\t\tchar_freqs,\n\t\tcapital_run_lengths_longest,\n\t\tcapital_run_lengths_total,\n\t\tcapital_run_lengths_average,\n\t];\n};\n\nconst preprocess = (\n\tword_freqs,\n\tchar_freqs,\n\tcapital_run_length_longest,\n\tcapital_run_length_total,\n\tcapital_run_length_average,\n) => {\n\tconst words = word_counters\n\t\t.map((w, i) => ({ [`word_freq_${w}`]: word_freqs[i] }))\n\t\t.reduce((res, word) => {\n\t\t\tres[Object.keys(word)[0]] = Object.values(word)[0];\n\t\t\treturn res;\n\t\t}, {});\n\tconst chars = char_counters\n\t\t.map((c, i) => ({ [`char_freq_${chars_to_chars[c]}`]: char_freqs[i] }))\n\t\t.reduce((res, char) => {\n\t\t\tres[Object.keys(char)[0]] = Object.values(char)[0];\n\t\t\treturn res;\n\t\t}, {});\n\treturn {\n\t\t...words,\n\t\t...chars,\n\t\tcapital_run_length_average,\n\t\tcapital_run_length_longest,\n\t\tcapital_run_length_total,\n\t};\n};\n\nconst Spam = ({ classes }) => {\n\tconst [value, setValue] = useState(undefined);\n\tconst [error, setError] = useState(undefined);\n\tconst [predicting, setPredicting] = useState(false);\n\tconst [explanation, setExplanation] = useState(defaultExplanation);\n\tconst [userGuess, setUserGuess] = useState(undefined);\n\tconst [prediction, setPrediction] = useState(undefined);\n\tconst [modelUpdated, setModelUpdated] = useState(false);\n\tconst [done, setDone] = useState(false);\n\n\tconst predictSample = () => {\n\t\tif (predicting) return;\n\t\tsetPredicting(true);\n\t\tsetExplanation(defaultExplanation);\n\t\tsetPrediction(undefined);\n\t\tsetUserGuess(undefined);\n\t\tAxios.get('/api/datasets/44/predict_spam/', {\n\t\t\tparams: {\n\t\t\t\tsample: preprocess(...countValues(value)),\n\t\t\t},\n\t\t})\n\t\t\t.then(res => {\n\t\t\t\tsetExplanation(res.data.explanation);\n\t\t\t\tsetPrediction(res.data.prediction);\n\t\t\t\tsetPredicting(false);\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tsetError(\n\t\t\t\t\t'Something went wrong while predicting the sample. Please try another sample or come back later.',\n\t\t\t\t);\n\t\t\t\tsetPredicting(false);\n\t\t\t});\n\t};\n\n\tconst updateModel = () => {\n\t\tAxios.get('/api/datasets/44/update_model/', {\n\t\t\tparams: {\n\t\t\t\tsample: preprocess(...countValues(value)),\n\t\t\t\tprediction,\n\t\t\t},\n\t\t})\n\t\t\t.then(res => setModelUpdated(true))\n\t\t\t.catch(err => {\n\t\t\t\tsetError(\n\t\t\t\t\t'Something went wrong while updating the model. Please try again or come back later.',\n\t\t\t\t);\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<div style={styles.container}>\n\t\t\t<TextareaAutosize\n\t\t\t\taria-label=\"minimum height\"\n\t\t\t\trowsMax={50}\n\t\t\t\trowsMin={50}\n\t\t\t\tplaceholder=\"Enter some email here...\"\n\t\t\t\tonChange={event => setValue(event.target.value)}\n\t\t\t\tvalue={value}\n\t\t\t\tstyle={{\n\t\t\t\t\tresize: 'none',\n\t\t\t\t\twidth: '50%',\n\t\t\t\t\toverflowY: 'scroll',\n\t\t\t\t\tmaxHeight: '70vh',\n\t\t\t\t\tmargin: '50px',\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<div style={styles.rightColumn}>\n\t\t\t\t<div>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={() => predictSample()}\n\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{predicting ? (\n\t\t\t\t\t\t\t<CircularProgress size={20} color=\"white\" />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Typography>Explain</Typography>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t\t<Typography style={styles.text}>\n\t\t\t\t\t{predicting\n\t\t\t\t\t\t? 'Explaining sample...'\n\t\t\t\t\t\t: explanation.replace(\"'1'\", 'spam').replace(\"'0'\", 'not spam')}\n\t\t\t\t</Typography>\n\t\t\t\t{explanation !== defaultExplanation && (\n\t\t\t\t\t<div style={styles.options1}>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\tThe model classified the email as {prediction === '0' ? 'not spam' : 'spam'}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Typography>What did you think this email was?</Typography>\n\t\t\t\t\t\t<div style={styles.controls}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor={userGuess === '1' ? 'primary' : ''}\n\t\t\t\t\t\t\t\tonClick={() => setUserGuess('1')}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Typography>Spam</Typography>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor={userGuess === '0' ? 'primary' : ''}\n\t\t\t\t\t\t\t\tonClick={() => setUserGuess('0')}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Typography>Not spam</Typography>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{userGuess &&\n\t\t\t\t\t\t\t(userGuess !== prediction ? (\n\t\t\t\t\t\t\t\t<div style={styles.options1}>\n\t\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\t\tYou seem to disagree with the model, would you like to retrain the model using\n\t\t\t\t\t\t\t\t\t\tthis new information?\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t<div style={styles.controls}>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => updateModel()}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Typography>Yes</Typography>\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => setDone(true)}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Typography>No</Typography>\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\tGreat! The model agrees with you. Enter a new email to try again.\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t<div style={styles.options1}>\n\t\t\t\t\t\t\t{modelUpdated && (\n\t\t\t\t\t\t\t\t<Typography>Model successfully updated! Enter a new email to try again.</Typography>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{done && <Typography>That's fine! Enter a new email to try again.</Typography>}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<Snackbar open={error != null} autoHideDuration={6000} onClose={() => setError(undefined)}>\n\t\t\t\t<Alert onClose={() => setError(undefined)} severity=\"error\">\n\t\t\t\t\t{error}\n\t\t\t\t</Alert>\n\t\t\t</Snackbar>\n\t\t</div>\n\t);\n};\n\nexport default withStyles(styles)(Spam);\n","import React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport {\n\tButton,\n\tCircularProgress,\n\tMenuItem,\n\tSelect,\n\tSlider,\n\tSnackbar,\n\tTypography,\n\twithStyles,\n} from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\n\nconst defaultExplanation = 'Enter feature values and press explain to start!';\n\nconst styles = {\n\tbutton: {\n\t\twidth: '10rem',\n\t\theight: '3rem',\n\t\tpadding: '1rem',\n\t\tborderRadius: '1rem',\n\t\tmargin: '1rem',\n\t},\n\tcontainer: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'row',\n\t\tflexGrow: '1',\n\t\tjustifyContent: 'space-evenly',\n\t\talignItems: 'center',\n\t\tpadding: '1rem',\n\t},\n\tcontrols: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'row',\n\t\twidth: '30vw',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'space-evenly',\n\t},\n\tloadingContainer: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center',\n\t\theight: '150px',\n\t\tjustifyContent: 'space-evenly',\n\t},\n\tleftColumn: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\tjustifyContent: 'flex-start',\n\t\talignItems: 'flex-start',\n\t\twidth: '50%',\n\t\theight: '70vh',\n\t\tmargin: '50px',\n\t},\n\trightColumn: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\tjustifyContent: 'flex-start',\n\t\talignItems: 'center',\n\t\twidth: '50%',\n\t\theight: '70vh',\n\t\tmargin: '50px',\n\t},\n\tinput: {\n\t\tdisplay: 'flex',\n\t\twidth: '100%',\n\t\tjustifyContent: 'space-between',\n\t\tmargin: '10px',\n\t},\n\tinputText: {\n\t\twidth: '10vw',\n\t},\n\tinputChanger: {\n\t\twidth: '20vw',\n\t\tdisplay: 'flex',\n\t},\n\tsliderText: {\n\t\tmarginLeft: '25px',\n\t\twidth: '25px',\n\t},\n\toptions1: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center',\n\t},\n\ttext: {\n\t\ttextAlign: 'center',\n\t\tmargin: '5px',\n\t},\n};\n\nconst getFeatures = id => Axios.get(`/api/datasets/${id}/retrieve_adult/`);\n\nconst Adult = ({ classes }) => {\n\tconst [features, setFeatures] = useState([]);\n\tconst [valuesPerFeature, setValuesPerFeature] = useState({});\n\tconst [boundsPerFeature, setBoundsPerFeature] = useState({});\n\tconst [featureValues, setFeatureValues] = useState({});\n\tconst [error, setError] = useState(undefined);\n\tconst [predicting, setPredicting] = useState(false);\n\tconst [explanation, setExplanation] = useState(defaultExplanation);\n\tconst [userGuess, setUserGuess] = useState(undefined);\n\tconst [prediction, setPrediction] = useState(undefined);\n\tconst [modelUpdated, setModelUpdated] = useState(false);\n\tconst [done, setDone] = useState(false);\n\n\tuseEffect(() => {\n\t\tAxios.all([getFeatures(1590)])\n\t\t\t.then(\n\t\t\t\tAxios.spread(details => {\n\t\t\t\t\tsetFeatures(details.data.features);\n\t\t\t\t\tsetValuesPerFeature(details.data.values_per_category);\n\t\t\t\t\tsetBoundsPerFeature(details.data.bounds_per_feature);\n\t\t\t\t}),\n\t\t\t)\n\t\t\t.catch(_ =>\n\t\t\t\tsetError(\n\t\t\t\t\t'Something went wrong while fetching the dataset. Please try another dataset or come back later.',\n\t\t\t\t),\n\t\t\t);\n\n\t\treturn () => {\n\t\t\tsetError(undefined);\n\t\t\tsetFeatures(undefined);\n\t\t};\n\t}, []);\n\n\tconst predictSample = () => {\n\t\tif (predicting) return;\n\n\t\tsetPredicting(true);\n\t\tsetExplanation(defaultExplanation);\n\t\tsetPrediction(undefined);\n\t\tsetUserGuess(undefined);\n\n\t\tconst sampleFeatures = {};\n\n\t\tfeatures.forEach(f => {\n\t\t\tif (f in valuesPerFeature) sampleFeatures[f] = featureValues[f] || valuesPerFeature[f][0];\n\t\t\tif (f in boundsPerFeature) {\n\t\t\t\tsampleFeatures[f] = featureValues[f] || boundsPerFeature[f][0];\n\t\t\t}\n\t\t});\n\n\t\tAxios.get('/api/datasets/1590/predict_adult/', {\n\t\t\tparams: {\n\t\t\t\tsample: sampleFeatures,\n\t\t\t},\n\t\t})\n\t\t\t.then(res => {\n\t\t\t\tsetExplanation(res.data.explanation);\n\t\t\t\tsetPrediction(res.data.prediction);\n\t\t\t\tsetPredicting(false);\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tsetError(\n\t\t\t\t\t'Something went wrong while predicting the sample. Please try another sample or come back later.',\n\t\t\t\t);\n\t\t\t\tsetPredicting(false);\n\t\t\t});\n\t};\n\n\tconst updateModel = () => {\n\t\tconst sampleFeatures = {};\n\t\tfeatures.forEach(f => {\n\t\t\tif (f in valuesPerFeature) sampleFeatures[f] = featureValues[f] || valuesPerFeature[f][0];\n\t\t\tif (f in boundsPerFeature) {\n\t\t\t\tsampleFeatures[f] = featureValues[f] || boundsPerFeature[f][0];\n\t\t\t}\n\t\t});\n\n\t\tAxios.get('/api/datasets/1590/update_model/', {\n\t\t\tparams: {\n\t\t\t\tsample: sampleFeatures,\n\t\t\t\tprediction: userGuess,\n\t\t\t},\n\t\t})\n\t\t\t.then(res => setModelUpdated(true))\n\t\t\t.catch(err => {\n\t\t\t\tsetError(\n\t\t\t\t\t'Something went wrong while updating the model. Please try again or come back later.',\n\t\t\t\t);\n\t\t\t});\n\t};\n\n\tconst renderValueChangers = f => {\n\t\tif (f in valuesPerFeature) {\n\t\t\treturn (\n\t\t\t\t<Select\n\t\t\t\t\tvalue={featureValues[f] || valuesPerFeature[f][0]}\n\t\t\t\t\tonChange={e => handleChange(f, e.target.value)}\n\t\t\t\t\tstyle={styles.inputChanger}\n\t\t\t\t>\n\t\t\t\t\t{valuesPerFeature[f].map(v => (\n\t\t\t\t\t\t<MenuItem key={v} value={v}>\n\t\t\t\t\t\t\t{v}\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t))}\n\t\t\t\t</Select>\n\t\t\t);\n\t\t} else if (f in boundsPerFeature) {\n\t\t\tconst min = parseInt(boundsPerFeature[f][0]);\n\t\t\tconst max = parseInt(boundsPerFeature[f][1]);\n\t\t\treturn (\n\t\t\t\t<div style={styles.inputChanger}>\n\t\t\t\t\t<Slider\n\t\t\t\t\t\tmin={min}\n\t\t\t\t\t\tmax={max}\n\t\t\t\t\t\tmarks={[\n\t\t\t\t\t\t\t{ value: min, label: min },\n\t\t\t\t\t\t\t{ value: max, label: max },\n\t\t\t\t\t\t]}\n\t\t\t\t\t\tstep={1.0}\n\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\n\t\t\t\t\t\tvalue={featureValues[f] || min}\n\t\t\t\t\t\tonChange={(_, v) => handleChange(f, v)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Typography style={styles.sliderText}>{featureValues[f] || min}</Typography>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t};\n\n\tconst handleChange = (f, v) => {\n\t\tsetPredicting(false);\n\t\tsetExplanation(defaultExplanation);\n\t\tsetPrediction(undefined);\n\t\tsetUserGuess(undefined);\n\n\t\tsetFeatureValues({ ...featureValues, [f]: v });\n\t};\n\n\treturn (\n\t\t<div style={styles.container}>\n\t\t\t<div style={styles.leftColumn}>\n\t\t\t\t{features.map(f => (\n\t\t\t\t\t<div key={f} style={styles.input}>\n\t\t\t\t\t\t<Typography style={styles.inputText}>{f}</Typography>\n\t\t\t\t\t\t{renderValueChangers(f)}\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<div style={styles.rightColumn}>\n\t\t\t\t<div>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={() => predictSample()}\n\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{predicting ? (\n\t\t\t\t\t\t\t<CircularProgress size={20} color=\"white\" />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Typography>Explain</Typography>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t\t<Typography style={styles.text}>\n\t\t\t\t\t{predicting\n\t\t\t\t\t\t? 'Explaining sample...'\n\t\t\t\t\t\t: explanation.replace(\"'1'\", 'spam').replace(\"'0'\", 'not spam')}\n\t\t\t\t</Typography>\n\t\t\t\t{explanation !== defaultExplanation && (\n\t\t\t\t\t<div style={styles.options1}>\n\t\t\t\t\t\t<Typography>What did you think this person was?</Typography>\n\t\t\t\t\t\t<div style={styles.controls}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor={userGuess === '<=50K' ? 'primary' : ''}\n\t\t\t\t\t\t\t\tonClick={() => setUserGuess('<=50K')}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Typography>{'<=50K'}</Typography>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor={userGuess === '>50K' ? 'primary' : ''}\n\t\t\t\t\t\t\t\tonClick={() => setUserGuess('>50K')}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Typography>{'>50K'}</Typography>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{userGuess &&\n\t\t\t\t\t\t\t(userGuess !== prediction ? (\n\t\t\t\t\t\t\t\t<div style={styles.options1}>\n\t\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\t\tYou seem to disagree with the model, would you like to retrain the model using\n\t\t\t\t\t\t\t\t\t\tthis new information?\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t<div style={styles.controls}>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => updateModel()}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Typography>Yes</Typography>\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => setDone(true)}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Typography>No</Typography>\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\tGreat! The model agrees with you. Enter new details to try again.\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t<div style={styles.options1}>\n\t\t\t\t\t\t\t{modelUpdated && (\n\t\t\t\t\t\t\t\t<Typography>Model successfully updated! Enter new details to try again.</Typography>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{done && <Typography>That's fine! Enter new details to try again.</Typography>}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<Snackbar open={error != null} autoHideDuration={6000} onClose={() => setError(undefined)}>\n\t\t\t\t<Alert onClose={() => setError(undefined)} severity=\"error\">\n\t\t\t\t\t{error}\n\t\t\t\t</Alert>\n\t\t\t</Snackbar>\n\t\t</div>\n\t);\n};\n\nexport default withStyles(styles)(Adult);\n","import React, { useState } from 'react';\n\nimport DatasetDetails from './components/DatasetDetails';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Button, Toolbar, Typography } from '@material-ui/core';\nimport Spam from './components/Spam';\nimport Adult from './components/Adult';\n\nconst useStyles = makeStyles(theme => ({\n\troot: {\n\t\tflexGrow: 1,\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\theight: '100vh',\n\t},\n\tmenuButton: {\n\t\tmarginRight: theme.spacing(2),\n\t},\n\ttitle: {\n\t\tflexGrow: 1,\n\t},\n}));\n\nconst App = () => {\n\tconst classes = useStyles();\n\tconst [datasetId, setDatasetId] = useState(1590);\n\n\tconst renderContent = () => {\n\t\tif (datasetId === 44) return <Spam />;\n\t\tif (datasetId === 1590) return <Adult />;\n\t\treturn <DatasetDetails datasetId={1590} />;\n\t};\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<AppBar position=\"static\">\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<Typography variant=\"h6\" className={classes.title}>\n\t\t\t\t\t\tConstrastive explanations\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Button onClick={() => setDatasetId(1590)} color=\"inherit\">\n\t\t\t\t\t\tAdult\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button onClick={() => setDatasetId(31)} color=\"inherit\">\n\t\t\t\t\t\tCredit-g\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button onClick={() => setDatasetId(44)} color=\"inherit\">\n\t\t\t\t\t\tSpam\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button onClick={() => setDatasetId(54)} color=\"inherit\">\n\t\t\t\t\t\tVehicle\n\t\t\t\t\t</Button>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t\t{renderContent()}\n\t\t</div>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}